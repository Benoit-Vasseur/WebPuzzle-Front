"use strict";angular.module("WebPuzzleFrontApp",["ui.router","ngDisqus","ngAnimate","ui.bootstrap","ui.bootstrap.buttons","template/tooltip/tooltip-popup.html"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$disqusProvider",function(a,b,c,d){d.setShortname("webpuzzle"),c.hashPrefix("!"),b.when("","/app/list"),b.when("/","/app/list"),b.when("/app/detail/","/app/list"),b.otherwise("/app/list"),a.state("app",{"abstract":!0,url:"/app",templateUrl:"views/navbar.html",controller:"navBarCtrl"}).state("app.authtoken",{url:"^/auth/:provider/end/:finaltoken",controller:"AuthendCtrl"}).state("app.create",{"abstract":!0,templateUrl:"views/create/create.html"}).state("app.create.github",{url:"/create/github",templateUrl:"views/create/github.html",controller:"CreateGithubCtrl"}).state("app.create.additionalInfo",{url:"/create/additionalInfos/:userName/:repo",templateUrl:"views/create/additionalInfo.html",controller:"CreateAdditionalInfoCtrl"}).state("app.list",{url:"/list",templateUrl:"views/list.html",controller:"ListCtrl"}).state("app.list.detail",{url:"/detail/:id",templateUrl:"views/detail.html",controller:"wcDetailedViewCtrl"})}]),angular.module("WebPuzzleFrontApp").controller("ListCtrl",["$rootScope","$scope","$http","WsUrl",function(a,b,c,d){b.webcomponents=[],b.wcNumberLimit=20,b.$on("$stateChangeSuccess",function(a,c){var d=c.name.match(/([^\.]*$)/)[0];b.viewMode={state:d}}),c({method:"GET",url:d+"web_components.json"}).success(function(a){b.webcomponents=a}).error(function(){}),b.selectWC={fn:function(b){a.selectedWC=b}},b.filter={text:"",filterObject:{name:"",submitter:""}},b.sortingTypes=[{name:"Ascending alphabetical order",iconCss:"fa fa-sort-alpha-asc",filter:"name"},{name:"Descending alphabetical order",iconCss:"fa fa-sort-alpha-desc",filter:"-name"},{name:"Descending popularity order",iconCss:"fa fa-sort-amount-desc",filter:"-popularity"},{name:"Ascending popularity order",iconCss:"fa fa-sort-amount-asc",filter:"popularity"}],b.selectedSorting={sortingFilterExpr:"name"},b.sortingTooltip={text:""},b.filterTypes=[{name:"By name",filter:"name"},{name:"By author",filter:"submitter"}],b.selectedFilterType={filter:"name"},b.$watch("filter.text",function(a){b.filter.filterObject={name:"",submitter:""},b.filter.filterObject[b.selectedFilterType.filter]=a}),b.$watch("selectedFilterType.filter",function(a){b.filter.filterObject={name:"",submitter:""},b.filter.filterObject[a]=b.filter.text}),b.addMoreComponents=function(){b.wcNumberLimit=b.wcNumberLimit+20}}]),angular.module("WebPuzzleFrontApp").controller("CreateAdditionalInfoCtrl",["$scope","$http","$state","$stateParams","GithubService","UserService","WsUrl",function(a,b,c,d,e,f,g){a.wc={name:"",description:"",imageLink:"",githubLink:"",demoLink:""},a.user=d.userName,a.repo=d.repo,e.checkRepo(a.user,a.repo).success(function(b){console.log("OK"),a.wc.name=b.name,a.wc.description=b.description,a.wc.githubLink=b.html_url}).error(function(){console.log("NO"),a.goBack()}),a.goBack=function(){c.go("app.create.github")},a.saveWC=function(c){a.webComponentForm.$valid&&b({method:"POST",url:g+"web_components.json",data:c,params:{auth_token:f.getToken()}}).success(function(b,c){a.status=c,a.data=b}).error(function(b,c){a.data=b||"Request failed",a.status=c})}}]),angular.module("WebPuzzleFrontApp").controller("CreateGithubCtrl",["$scope","$http","$state","GithubService","UserService",function(a,b,c,d,e){a.wc={},a.wc.githubLink="",b({method:"GET",url:"https://api.github.com/user/repos?access_token="+e.getToken()}).success(function(b){a.userRepos=b}),a.submitForm=function(a){var b=d.giveUserAndRepoFromUrl(a);d.checkRepo(b.user,b.repo).success(function(){c.go("app.create.additionalInfo",{userName:b.user,repo:b.repo})}).error(function(){console.log("NO")})},a.goToAdditionalInfo=function(a,b){c.go("app.create.additionalInfo",{userName:a,repo:b})}}]),angular.module("WebPuzzleFrontApp").controller("navBarCtrl",["$scope","WsUrl","UserService",function(a,b,c){a.authentUrl=b+"auth/github/send",a.user=JSON.parse(c.getUserInfo()),console.log(a.user),a.isConnected=function(){return c.isConnected()},a.signOut=function(){c.signOut()}}]),angular.module("WebPuzzleFrontApp").controller("wcDetailedViewCtrl",["$scope","$rootScope","$stateParams","$http","WsUrl",function(a,b,c,d,e){a.wc={id:c.id},!a.selectedWC,d({method:"GET",url:e+"web_components/"+a.wc.id+".json"}).success(function(a){b.selectedWC=a}).error(function(){})}]),angular.module("WebPuzzleFrontApp").controller("AuthendCtrl",["$scope","$stateParams","UserService","$location",function(a,b,c,d){console.log("getting token",b.finaltoken);var e=c.checkToken(b.finaltoken);e.then(function(a){c.setToken(b.finaltoken),c.signIn(JSON.stringify(a.data)),console.log(c.getUserInfo()),d.path("/")},function(){d.path("/")})}]),angular.module("WebPuzzleFrontApp").factory("WsUrl",function(){var a="http://webpuzzlews.herokuapp.com/";return a}),angular.module("WebPuzzleFrontApp").factory("GithubService",["$http",function(a){var b="https://api.github.com/";return{checkRepo:function(c,d){return a({method:"GET",url:b+"repos/"+c+"/"+d})},giveUserAndRepoFromUrl:function(a){var b=/https:\/\/github.com\/(.+)\/(.+)/g,c=b.exec(a);return null===c?!1:{user:c[1],repo:c[2]}}}}]),angular.module("WebPuzzleFrontApp").directive("webComponent",function(){return{restrict:"E",templateUrl:"directive_templates/webComponent.html",link:function(a,b,c){a.wcClickable=void 0!==c.clickable?"true"===c.clickable:!0}}});var GITHUB_REPO_REGEXP=/https:\/\/github.com\/.+\/.+/;angular.module("WebPuzzleFrontApp").directive("githubRepoLink",function(){return{require:"ngModel",link:function(a,b,c,d){d.$parsers.unshift(function(a){return GITHUB_REPO_REGEXP.test(a)?(d.$setValidity("githubRepo",!0),a):(d.$setValidity("githubRepo",!1),void 0)})}}}),angular.module("WebPuzzleFrontApp").factory("UserService",["WsUrl","$http",function(a,b){var c=function(a){sessionStorage.setItem("github-user-info",a)};return{getToken:function(){return sessionStorage.getItem("github-token")},setToken:function(a){sessionStorage.setItem("github-token",a)},checkToken:function(c){return b.get(a+"auth/github/check",{params:{access_token:c}})},signIn:function(a){c(a)},signOut:function(){sessionStorage.clear()},isConnected:function(){return void 0===this.getUserInfo()?!1:this.getUserInfo()},getUserInfo:function(){return sessionStorage.getItem("github-user-info")}}}]);